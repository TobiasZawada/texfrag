#+TITLE: Testing texfrag

* Installation for testing
  - These are installation instructions for developers.
    If you just want to *use* ~texfrag~ you better install ~texfrag~ by ~package-install~ from ~melpa~.
  - The most important use-case for testing is when you have modified ~texfrag~.
  - For modifying the source code clone the repository https://github.com/TobiasZawada/texfrag/.
    After testing your modifications you can send me a pull-request via github.
  - The test is installed along with the sources when cloning the archive.

* Running the test
  - Start emacs with the following command in the top-level directory of the ~texfrag~ working copy:
    #+BEGIN_SRC shell
emacs -Q --debug-init --eval '(package-initialize)' -l texfrag.el
    #+END_SRC
  - Run the steps in Section [[Test]]

* Test
  - Currently all pre-release tests for ~texfrag.el~ are contained in this file.
  - The tests should be carried out for both possible configurations of ~texfrag-preview-buffer-at-start~ (nil and non-nil).
  - Furthermore, the manual activation of ~texfrag-mode~ and ~texfrag-global-mode~ should be tested.
  - This file itself is a test.
  - All sub-sections of [[Test data]] are tests. ~texfrag-mode~ should be tested for those cases in the org source edit buffer and in the tangled file.

* Test data
#+LATEX_HEADER: \def\di{\operatorname{d}}\let\ph\varphi\def\I{\operatorname{i}}

  This section contains some LaTeX fragments for testing with ~texfrag~.
  The following test steps should work with ~texfrag-global-mode~ switched on
  or by individually switching on ~texfrag-mode~ in the test buffers.
** Org-mode
   - Testing parenthesis fragments: The theorem of Pythagoras: \(z=\sqrt{x^2 + y^2}\).
   - Testing dollar fragments: Einstein's formula of the photo-voltaic process: $E=h\cdot f$
   - Testing bracket fragments: B-spline basis function
     \[b(x) = (x_{i+d}-x_i)\cdot [x_i,\ldots,x_{i+d}]_y (y-x)^d_+\]
   - Testing LaTeX environments: Cauchy's integral formula
     \begin{align*}
\frac1{2\pi\I}\oint_C \frac{f(z)}{z-z_0}\di z &= \lim_{r\downarrow0} \frac1{2\pi\I}\int_{\ph=0}^{2\pi} \frac{f(z_0+r\exp(\I\ph))}{r\exp(\I\ph)}r\exp(\I\ph) \I\di \ph\\
&= f(z)
     \end{align*}
   - Testing double dollar display formulas:
     $$
     \oint_{\partial G} \vec E \cdot d\vec r = -\int_{G} \dot{\vec B}\cdot d\vec{A}
     $$
** TODO prog-mode
   Version 0.2 of ~texfrag~ mode does not work correctly in the C++ source code edit buffer of org-babel.
   Nevertheless it works in the tangled file.
   That should be tested here as a regression test.
   #+BEGIN_SRC C :tangle /tmp/test.c :results silent
     #include <stdio.h>
     /**
	- Testing dollar fragments: Einstein's formula of the photo-voltaic process: \f$E=h\cdot f\f$
	- Testig bracket fragments: B-spline basis function
	\f[
	b(x) = (x_{i+d}-x_i)\cdot [x_i,\ldots,x_{i+d}]_y (y-x)^d_+
	\f]
	- Testing LaTeX environments: Cauchy's integral formula
	\f{align*}
	\frac1{2\pi i}\oint_C \frac{f(z)}{z-z_0}\;d z &= \lim_{r\downarrow0} \frac1{2\pi i}\int_{\varphi=0}^{2\pi} \frac{f(z_0+r\exp( i\varphi))}{r\exp( i\varphi)}r\exp( i\varphi)  i\;d \varphi\\
	&= f(z)
	\f}
     ,*/
     int main() {
	     printf("Hello world.\n");
	     return 0;
     }
   #+END_SRC

   #+BEGIN_SRC C++ :tangle /tmp/test.cc :results silent
     #include <iostream>
     /**
	- Testing dollar fragments: Einstein's formula of the photo-voltaic process: \f$E=h\cdot f\f$
	- Testing bracket fragments: B-spline basis function
	\f[
	b(x) = (x_{i+d}-x_i)\cdot [x_i,\ldots,x_{i+d}]_y (y-x)^d_+
	\f]
	- Testing LaTeX environments: Cauchy's integral formula
	\f{align*}
	\frac1{2\pi i}\oint_C \frac{f(z)}{z-z_0}\;d z &= \lim_{r\downarrow0} \frac1{2\pi i}\int_{\varphi=0}^{2\pi} \frac{f(z_0+r\exp( i\varphi))}{r\exp( i\varphi)}r\exp( i\varphi)  i\;d \varphi\\
	&= f(z)
	\f}
     ,*/
     int main() {
	     std::out << "Hello world.\n";
	     return 0;
     }
   #+END_SRC   

   #+BEGIN_SRC emacs-lisp 
     ;; Testing dollar fragments: Einstein's formula of the photo-voltaic process: \f$E=h\cdot f\f$
     ;; Testing bracket fragments: B-spline basis function \f[ b(x) = (x_{i+d}-x_i)\cdot [x_i,\ldots,x_{i+d}]_y (y-x)^d_+ \f]
     ;; Testing LaTeX environments: Cauchy's integral formula   \f{align*}   \frac1{2\pi i}\oint_C \frac{f(z)}{z-z_0}\;d z &= \lim_{r\downarrow0} \frac1{2\pi i}\int_{\varphi=0}^{2\pi} \frac{f(z_0+r\exp( i\varphi))}{r\exp( i\varphi)}r\exp( i\varphi)  i\;d \varphi\\   &= f(z)   \f}
     "Test finished"
   #+END_SRC

** eww
External link for testing texfrag with eww: https://github.com/TobiasZawada/texfrag/blob/master/test/README_TEST.org

#+BEGIN_SRC svg :tangle /tmp/test.svg :results silent
<?xml version="1.0" standalone="no"?>

<svg viewBox="0 0 480 150" style="background-color:#ffffff00" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" x="0px" y="0px" width="480" height="150">
    <path d="M 0 35.5 L 6.5 22.5 L 16 37 L 23 24 L 34.8 43.7 L 42.5 30 L 50.3 47 L 59.7 27.7 L 69 47 L 85 17.7 L 98.3 39 L 113 9.7 L 127.7 42.3 L 136.3 23.7 L 147 44.3 L 158.3 20.3 L 170.3 40.3 L 177.7 25.7 L 189.7 43 L 199.7 21 L 207.7 35 L 219 11 L 233 37 L 240.3 23.7 L 251 43 L 263 18.3 L 272.7 33.3 L 283 10 L 295 32.3 L 301.3 23 L 311.7 37 L 323.7 7.7 L 339.3 39 L 346.3 25.7 L 356.3 42.3 L 369.7 15 L 376.3 25.7 L 384 9 L 393 28.3 L 400.3 19 L 411.7 38.3 L 421 21 L 434.3 43 L 445 25 L 453 36.3 L 464.3 18.3 L 476.2 40.3 L 480 33.5 L 480 215 L 0 215 L 0 35.5 Z" fill="#175720"/>
</svg>
#+END_SRC

#+BEGIN_SRC html :tangle /tmp/test.html :results silent
  <!DOCTYPE html>
  <head>
    <script src='https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/MathJax.js?config=TeX-MML-AM_CHTML'>
      MathJax.Hub.Config({
      tex2jax: {
      inlineMath: [['$','$'], ['\\(','\\)']],
      processEscapes: true
      }
      });
    </script>
    <title>texfrag html test</title>
  </head>
  <body>
    <h1>texfrag html test</h1>
    <p>Testing replacement of images in <code>html-mode</code> with the following example from <a href="https://stackoverflow.com/q/30445508/2708138">How minimal can an SVG be?</a>: <img src="test.svg" />.</p>
    <p>
      MathJax test.
      <ul>
	<li>Testing parenthesis fragments: The theorem of Pythagoras: \(\def\di{\operatorname{d}}\def\ph{\varphi}\def\I{\operatorname{i}}z=\sqrt{x^2 + y^2}\).</li>
	<li>Testing dollar fragments: Einstein's formula of the photo-voltaic process: $E=h\cdot f$</li>
	<li>Testing bracket fragments: B-spline basis function
	  \[
	  b(x) = (x_{i+d}-x_i)\cdot [x_i,\ldots,x_{i+d}]_y (y-x)^d_+
	  \]
	</li>
	<li>Testing LaTeX environments: Cauchy's integral formula
	  \begin{align*}
	  \frac1{2\pi\I}\oint_C \frac{f(z)}{z-z_0}\di z &= \lim_{r\downarrow0} \frac1{2\pi\I}\int_{\ph=0}^{2\pi} \frac{f(z_0+r\exp(\I\ph))}{r\exp(\I\ph)}r\exp(\I\ph) \I\di \ph\\
	  &= f(z)
	  \end{align*}
	</li>
      </ul>
    </p>
  </body>
   #+END_SRC

Second html document for testing with eww:
   #+BEGIN_SRC html :tangle /tmp/test1.html :results silent
     <!DOCTYPE html>
     <head>
       <script src='https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/MathJax.js?config=TeX-MML-AM_CHTML'>
	 MathJax.Hub.Config({
	 tex2jax: {
	 inlineMath: [['$','$'], ['\\(','\\)']],
	 processEscapes: true
	 }
	 });
       </script>
       <title>Second texfrag html test for eww</title>
     </head>
     <body>
       <h1>Second texfrag html test for eww</h1>
       <p>
	 MathJax test.
	 <ul>
	   <li>Testing parenthesis fragments: The theorem of Pythagoras: \(\def\di{\operatorname{d}}\def\ph{\varphi}\def\I{\operatorname{i}}Z=\sqrt{X^2 + Y^2}\).</li>
	   <li>Testing dollar fragments: Einstein's formula of the photo-voltaic process: $E\;=\;h\cdot f$</li>
	   <li>Testing bracket fragments: B-spline basis function
	     \[
	     b(\xi) = (x_{i+d}-x_i)\cdot [x_i,\ldots,x_{i+d}]_y (y-\xi)^d_+
	     \]
	   </li>
	   <li>Testing LaTeX environments: Cauchy's integral formula
	     \begin{align*}
	     \frac1{2\pi\I}\oint_C \frac{f(Z)}{Z-z_0}\di Z &= \lim_{r\downarrow0} \frac1{2\pi\I}\int_{\ph=0}^{2\pi} \frac{f(z_0+r\exp(\I\ph))}{r\exp(\I\ph)}r\exp(\I\ph) \I\di \ph\\
	     &= f(z)
	     \end{align*}
	   </li>
	 </ul>
       </p>
     </body>
   #+END_SRC

** markdown
#+BEGIN_SRC markdown
  # First Section
  Testing an inline image:
  ![Alternative Text](/tmp/test.svg)
  Inline image with caption:
  ![Alternative Text](/tmp/test.svg "Some doc.")

  [//] Local Variables:
  [//] eval: (texfrag-mode)
  [//] End:
#+END_SRC

** Asciidoc

#+BEGIN_SRC adoc :tangle /tmp/test.adoc
  = Test for Adoc files
  :stem: latexmath
  :imagesdir: /tmp

  == Some formula

  Some inline formula latexmath:[z=\sqrt{x^2+y^2}]

  [latexmath]
  ++++
  z = \sqrt{x^2+y^2}
  ++++

  image::test.svg[]
#+END_SRC

** sx
   You need ~sx~ to be installed from ~melpa~ to run this test.

   - ~sx-tab-newest~ and choose ~math~
   - Choose any ~math.stackexchange.org~ page that looks like it has many MathJax formulas in it.
   - Display that page.

* Local Vars :noexport:

Local Variables:
ispell-dictionary: "en_US"
eval: (flyspell-mode)
End:
